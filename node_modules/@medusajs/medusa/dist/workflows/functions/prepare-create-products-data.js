"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.prepareCreateProductsData = void 0;
var utils_1 = require("@medusajs/utils");
var sales_channels_1 = __importDefault(require("../../loaders/feature-flags/sales-channels"));
var models_1 = require("../../models");
function prepareCreateProductsData(_a) {
    var _b, _c, _d;
    var container = _a.container, manager = _a.manager, data = _a.data;
    return __awaiter(this, void 0, void 0, function () {
        var shippingProfileService, featureFlagRouter, salesChannelService, shippingProfileServiceTx, shippingProfiles, defaultShippingProfile, gitCardShippingProfile, defaultSalesChannel, productsHandleShippingProfileIdMap, productsHandleSalesChannelsMap, productsHandleVariantsIndexPricesMap, _loop_1, data_1, data_1_1, product;
        var e_1, _e;
        return __generator(this, function (_f) {
            switch (_f.label) {
                case 0:
                    shippingProfileService = container
                        .resolve("shippingProfileService")
                        .withTransaction(manager);
                    featureFlagRouter = container.resolve("featureFlagRouter");
                    salesChannelService = container
                        .resolve("salesChannelService")
                        .withTransaction(manager);
                    shippingProfileServiceTx = shippingProfileService.withTransaction(manager);
                    return [4 /*yield*/, shippingProfileServiceTx.list({
                            type: [models_1.ShippingProfileType.DEFAULT, models_1.ShippingProfileType.GIFT_CARD],
                        })];
                case 1:
                    shippingProfiles = _f.sent();
                    defaultShippingProfile = shippingProfiles.find(function (sp) { return sp.type === models_1.ShippingProfileType.DEFAULT; });
                    gitCardShippingProfile = shippingProfiles.find(function (sp) { return sp.type === models_1.ShippingProfileType.GIFT_CARD; });
                    if (!featureFlagRouter.isFeatureEnabled(sales_channels_1.default.key)) return [3 /*break*/, 3];
                    return [4 /*yield*/, salesChannelService
                            .withTransaction(manager)
                            .retrieveDefault()];
                case 2:
                    defaultSalesChannel = _f.sent();
                    _f.label = 3;
                case 3:
                    productsHandleShippingProfileIdMap = new Map();
                    productsHandleSalesChannelsMap = new Map();
                    productsHandleVariantsIndexPricesMap = new Map();
                    _loop_1 = function (product) {
                        (_b = product.handle) !== null && _b !== void 0 ? _b : (product.handle = (0, utils_1.kebabCase)(product.title));
                        if (product.is_giftcard) {
                            productsHandleShippingProfileIdMap.set(product.handle, gitCardShippingProfile.id);
                        }
                        else {
                            productsHandleShippingProfileIdMap.set(product.handle, defaultShippingProfile.id);
                        }
                        if (featureFlagRouter.isFeatureEnabled(sales_channels_1.default.key) &&
                            !((_c = product.sales_channels) === null || _c === void 0 ? void 0 : _c.length)) {
                            productsHandleSalesChannelsMap.set(product.handle, [
                                defaultSalesChannel.id,
                            ]);
                        }
                        else {
                            productsHandleSalesChannelsMap.set(product.handle, product.sales_channels.map(function (s) { return s.id; }));
                        }
                        if (product.variants) {
                            var hasPrices = product.variants.some(function (variant) {
                                return variant.prices.length > 0;
                            });
                            if (hasPrices) {
                                var items_1 = (_d = productsHandleVariantsIndexPricesMap.get(product.handle)) !== null && _d !== void 0 ? _d : [];
                                product.variants.forEach(function (variant, index) {
                                    items_1.push({
                                        index: index,
                                        prices: variant.prices,
                                    });
                                });
                                productsHandleVariantsIndexPricesMap.set(product.handle, items_1);
                            }
                        }
                    };
                    try {
                        for (data_1 = __values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                            product = data_1_1.value;
                            _loop_1(product);
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (data_1_1 && !data_1_1.done && (_e = data_1.return)) _e.call(data_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    data = data.map(function (productData) {
                        delete productData.sales_channels;
                        return productData;
                    });
                    return [2 /*return*/, {
                            products: data,
                            productsHandleShippingProfileIdMap: productsHandleShippingProfileIdMap,
                            productsHandleSalesChannelsMap: productsHandleSalesChannelsMap,
                            productsHandleVariantsIndexPricesMap: productsHandleVariantsIndexPricesMap,
                        }];
            }
        });
    });
}
exports.prepareCreateProductsData = prepareCreateProductsData;
//# sourceMappingURL=prepare-create-products-data.js.map