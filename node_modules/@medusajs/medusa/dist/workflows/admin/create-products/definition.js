"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transactionHandler = exports.workflowSteps = exports.CreateProductsWorkflowActions = void 0;
var orchestration_1 = require("@medusajs/orchestration");
var api_1 = require("../../../api");
var functions_1 = require("../../functions");
var CreateProductsWorkflowActions;
(function (CreateProductsWorkflowActions) {
    CreateProductsWorkflowActions["prepare"] = "prepare";
    CreateProductsWorkflowActions["createProducts"] = "createProducts";
    CreateProductsWorkflowActions["attachToSalesChannel"] = "attachToSalesChannel";
    CreateProductsWorkflowActions["attachShippingProfile"] = "attachShippingProfile";
    CreateProductsWorkflowActions["createPrices"] = "createPrices";
    CreateProductsWorkflowActions["createInventoryItems"] = "createInventoryItems";
    CreateProductsWorkflowActions["attachInventoryItems"] = "attachInventoryItems";
    CreateProductsWorkflowActions["result"] = "result";
})(CreateProductsWorkflowActions = exports.CreateProductsWorkflowActions || (exports.CreateProductsWorkflowActions = {}));
exports.workflowSteps = {
    next: {
        action: CreateProductsWorkflowActions.prepare,
        noCompensation: true,
        next: {
            action: CreateProductsWorkflowActions.createProducts,
            next: [
                {
                    action: CreateProductsWorkflowActions.attachShippingProfile,
                    saveResponse: false,
                },
                {
                    action: CreateProductsWorkflowActions.attachToSalesChannel,
                    saveResponse: false,
                },
                {
                    action: CreateProductsWorkflowActions.createPrices,
                    next: {
                        action: CreateProductsWorkflowActions.createInventoryItems,
                        next: {
                            action: CreateProductsWorkflowActions.attachInventoryItems,
                            next: {
                                action: CreateProductsWorkflowActions.result,
                                noCompensation: true,
                            },
                        },
                    },
                },
            ],
        },
    },
};
var shouldSkipInventoryStep = function (container, stepName) {
    var inventoryService = container.resolve("inventoryService");
    if (!inventoryService) {
        var logger = container.resolve("logger");
        logger.warn("Inventory service not found. You should install the @medusajs/inventory package to use inventory. The '".concat(stepName, "' will be skipped."));
        return true;
    }
    return false;
};
function transactionHandler(dependencies) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    var _this = this;
    var manager = dependencies.manager, container = dependencies.container;
    var command = (_a = {},
        _a[CreateProductsWorkflowActions.prepare] = (_b = {},
            _b[orchestration_1.TransactionHandlerType.INVOKE] = function (data) { return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, (0, functions_1.prepareCreateProductsData)({
                                container: container,
                                manager: manager,
                                data: data,
                            })];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            }); },
            _b),
        _a[CreateProductsWorkflowActions.createProducts] = (_c = {},
            _c[orchestration_1.TransactionHandlerType.INVOKE] = function (data) { return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, (0, functions_1.createProducts)({
                                container: container,
                                data: data,
                            })];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            }); },
            _c[orchestration_1.TransactionHandlerType.COMPENSATE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var products;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                products = invoke[CreateProductsWorkflowActions.createProducts];
                                if (!(products === null || products === void 0 ? void 0 : products.length)) {
                                    return [2 /*return*/];
                                }
                                return [4 /*yield*/, (0, functions_1.removeProducts)({
                                        container: container,
                                        data: products,
                                    })];
                            case 1: return [2 /*return*/, _b.sent()];
                        }
                    });
                });
            },
            _c),
        _a[CreateProductsWorkflowActions.attachShippingProfile] = (_d = {},
            _d[orchestration_1.TransactionHandlerType.INVOKE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var products, productsHandleShippingProfileIdMap;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                products = invoke[CreateProductsWorkflowActions.createProducts];
                                productsHandleShippingProfileIdMap = invoke[CreateProductsWorkflowActions.prepare].productsHandleShippingProfileIdMap;
                                return [4 /*yield*/, (0, functions_1.attachShippingProfileToProducts)({
                                        container: container,
                                        manager: manager,
                                        data: {
                                            productsHandleShippingProfileIdMap: productsHandleShippingProfileIdMap,
                                            products: products,
                                        },
                                    })];
                            case 1: return [2 /*return*/, _b.sent()];
                        }
                    });
                });
            },
            _d[orchestration_1.TransactionHandlerType.COMPENSATE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var products, productsHandleShippingProfileIdMap;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                products = invoke[CreateProductsWorkflowActions.createProducts];
                                productsHandleShippingProfileIdMap = invoke[CreateProductsWorkflowActions.prepare].productsHandleShippingProfileIdMap;
                                return [4 /*yield*/, (0, functions_1.detachShippingProfileFromProducts)({
                                        container: container,
                                        manager: manager,
                                        data: {
                                            productsHandleShippingProfileIdMap: productsHandleShippingProfileIdMap,
                                            products: products,
                                        },
                                    })];
                            case 1: return [2 /*return*/, _b.sent()];
                        }
                    });
                });
            },
            _d),
        _a[CreateProductsWorkflowActions.attachToSalesChannel] = (_e = {},
            _e[orchestration_1.TransactionHandlerType.INVOKE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var products, productsHandleSalesChannelsMap;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                products = invoke[CreateProductsWorkflowActions.createProducts];
                                productsHandleSalesChannelsMap = invoke[CreateProductsWorkflowActions.prepare].productsHandleSalesChannelsMap;
                                return [4 /*yield*/, (0, functions_1.attachSalesChannelToProducts)({
                                        container: container,
                                        manager: manager,
                                        data: {
                                            productsHandleSalesChannelsMap: productsHandleSalesChannelsMap,
                                            products: products,
                                        },
                                    })];
                            case 1: return [2 /*return*/, _b.sent()];
                        }
                    });
                });
            },
            _e[orchestration_1.TransactionHandlerType.COMPENSATE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var products, productsHandleSalesChannelsMap;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                products = invoke[CreateProductsWorkflowActions.createProducts];
                                productsHandleSalesChannelsMap = invoke[CreateProductsWorkflowActions.prepare].productsHandleSalesChannelsMap;
                                return [4 /*yield*/, (0, functions_1.detachSalesChannelFromProducts)({
                                        container: container,
                                        manager: manager,
                                        data: {
                                            productsHandleSalesChannelsMap: productsHandleSalesChannelsMap,
                                            products: products,
                                        },
                                    })];
                            case 1: return [2 /*return*/, _b.sent()];
                        }
                    });
                });
            },
            _e),
        _a[CreateProductsWorkflowActions.createInventoryItems] = (_f = {},
            _f[orchestration_1.TransactionHandlerType.INVOKE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var shouldSkipStep_, _b, _c, products;
                    return __generator(this, function (_d) {
                        switch (_d.label) {
                            case 0:
                                shouldSkipStep_ = shouldSkipInventoryStep(container, CreateProductsWorkflowActions.createInventoryItems);
                                if (shouldSkipStep_) {
                                    return [2 /*return*/];
                                }
                                _b = invoke, _c = CreateProductsWorkflowActions.createProducts, products = _b[_c];
                                return [4 /*yield*/, (0, functions_1.createInventoryItems)({
                                        container: container,
                                        manager: manager,
                                        data: products,
                                    })];
                            case 1: return [2 /*return*/, _d.sent()];
                        }
                    });
                });
            },
            _f[orchestration_1.TransactionHandlerType.COMPENSATE] = function (_, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var shouldSkipStep_, variantInventoryItemsData;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                shouldSkipStep_ = shouldSkipInventoryStep(container, CreateProductsWorkflowActions.createInventoryItems);
                                variantInventoryItemsData = invoke[CreateProductsWorkflowActions.createInventoryItems];
                                if (shouldSkipStep_ || !(variantInventoryItemsData === null || variantInventoryItemsData === void 0 ? void 0 : variantInventoryItemsData.length)) {
                                    return [2 /*return*/];
                                }
                                return [4 /*yield*/, (0, functions_1.removeInventoryItems)({
                                        container: container,
                                        manager: manager,
                                        data: variantInventoryItemsData,
                                    })];
                            case 1:
                                _b.sent();
                                return [2 /*return*/];
                        }
                    });
                });
            },
            _f),
        _a[CreateProductsWorkflowActions.attachInventoryItems] = (_g = {},
            _g[orchestration_1.TransactionHandlerType.INVOKE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var shouldSkipStep_, _b, _c, inventoryItemsResult;
                    return __generator(this, function (_d) {
                        switch (_d.label) {
                            case 0:
                                shouldSkipStep_ = shouldSkipInventoryStep(container, CreateProductsWorkflowActions.attachInventoryItems);
                                if (shouldSkipStep_) {
                                    return [2 /*return*/];
                                }
                                _b = invoke, _c = CreateProductsWorkflowActions.createInventoryItems, inventoryItemsResult = _b[_c];
                                return [4 /*yield*/, (0, functions_1.attachInventoryItems)({
                                        container: container,
                                        manager: manager,
                                        data: inventoryItemsResult,
                                    })];
                            case 1: return [2 /*return*/, _d.sent()];
                        }
                    });
                });
            },
            _g[orchestration_1.TransactionHandlerType.COMPENSATE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var shouldSkipStep_, _b, _c, inventoryItemsResult;
                    return __generator(this, function (_d) {
                        switch (_d.label) {
                            case 0:
                                shouldSkipStep_ = shouldSkipInventoryStep(container, CreateProductsWorkflowActions.attachInventoryItems);
                                _b = invoke, _c = CreateProductsWorkflowActions.createInventoryItems, inventoryItemsResult = _b[_c];
                                if (shouldSkipStep_ || !(inventoryItemsResult === null || inventoryItemsResult === void 0 ? void 0 : inventoryItemsResult.length)) {
                                    return [2 /*return*/];
                                }
                                return [4 /*yield*/, (0, functions_1.detachInventoryItems)({
                                        container: container,
                                        manager: manager,
                                        data: inventoryItemsResult,
                                    })];
                            case 1: return [2 /*return*/, _d.sent()];
                        }
                    });
                });
            },
            _g),
        _a[CreateProductsWorkflowActions.createPrices] = (_h = {},
            _h[orchestration_1.TransactionHandlerType.INVOKE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var productsHandleVariantsIndexPricesMap, products;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                productsHandleVariantsIndexPricesMap = invoke[CreateProductsWorkflowActions.prepare].productsHandleVariantsIndexPricesMap;
                                products = invoke[CreateProductsWorkflowActions.createProducts];
                                return [4 /*yield*/, (0, functions_1.updateProductsVariantsPrices)({
                                        container: container,
                                        manager: manager,
                                        data: {
                                            products: products,
                                            productsHandleVariantsIndexPricesMap: productsHandleVariantsIndexPricesMap,
                                        },
                                    })];
                            case 1: return [2 /*return*/, _b.sent()];
                        }
                    });
                });
            },
            _h[orchestration_1.TransactionHandlerType.COMPENSATE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var productsHandleVariantsIndexPricesMap, products, updatedProductsHandleVariantsIndexPricesMap;
                    return __generator(this, function (_b) {
                        switch (_b.label) {
                            case 0:
                                productsHandleVariantsIndexPricesMap = invoke[CreateProductsWorkflowActions.prepare].productsHandleVariantsIndexPricesMap;
                                products = invoke[CreateProductsWorkflowActions.createProducts];
                                if (!(productsHandleVariantsIndexPricesMap === null || productsHandleVariantsIndexPricesMap === void 0 ? void 0 : productsHandleVariantsIndexPricesMap.size)) {
                                    return [2 /*return*/];
                                }
                                updatedProductsHandleVariantsIndexPricesMap = new Map();
                                productsHandleVariantsIndexPricesMap.forEach(function (items, productHandle) {
                                    var _a;
                                    var existingItems = (_a = updatedProductsHandleVariantsIndexPricesMap.get(productHandle)) !== null && _a !== void 0 ? _a : [];
                                    items.forEach(function (_a) {
                                        var index = _a.index;
                                        existingItems.push({
                                            index: index,
                                            prices: [],
                                        });
                                    });
                                    updatedProductsHandleVariantsIndexPricesMap.set(productHandle, items);
                                });
                                return [4 /*yield*/, (0, functions_1.updateProductsVariantsPrices)({
                                        container: container,
                                        manager: manager,
                                        data: {
                                            products: products,
                                            productsHandleVariantsIndexPricesMap: updatedProductsHandleVariantsIndexPricesMap,
                                        },
                                    })];
                            case 1: return [2 /*return*/, _b.sent()];
                        }
                    });
                });
            },
            _h),
        _a[CreateProductsWorkflowActions.result] = (_j = {},
            _j[orchestration_1.TransactionHandlerType.INVOKE] = function (data, _a) {
                var invoke = _a.invoke;
                return __awaiter(_this, void 0, void 0, function () {
                    var _b, _c, products, productService, pricingService, rawProduct, res;
                    return __generator(this, function (_d) {
                        switch (_d.label) {
                            case 0:
                                _b = invoke, _c = CreateProductsWorkflowActions.createProducts, products = _b[_c];
                                productService = container.resolve("productService");
                                pricingService = container.resolve("pricingService");
                                return [4 /*yield*/, productService
                                        .withTransaction(manager)
                                        .retrieve(products[0].id, {
                                        select: api_1.defaultAdminProductFields,
                                        relations: api_1.defaultAdminProductRelations,
                                    })];
                            case 1:
                                rawProduct = _d.sent();
                                return [4 /*yield*/, pricingService
                                        .withTransaction(manager)
                                        .setProductPrices([rawProduct])];
                            case 2:
                                res = _d.sent();
                                return [2 /*return*/, res];
                        }
                    });
                });
            },
            _j),
        _a);
    return function (actionId, type, payload) { return command[actionId][type](payload.data, payload.context); };
}
exports.transactionHandler = transactionHandler;
//# sourceMappingURL=definition.js.map