import { JoinerRelationship, LoadedModule, RemoteExpandProperty } from "@medusajs/types";
export declare class RemoteQuery {
    private remoteJoiner;
    private modulesMap;
    constructor(modulesLoaded?: LoadedModule[], remoteFetchData?: (expand: RemoteExpandProperty, keyField: string, ids?: (unknown | unknown[])[], relationship?: JoinerRelationship) => Promise<{
        data: unknown[] | {
            [path: string]: unknown[];
        };
        path?: string;
    }>);
    setFetchDataCallback(remoteFetchData: (expand: RemoteExpandProperty, keyField: string, ids?: (unknown | unknown[])[], relationship?: any) => Promise<{
        data: unknown[] | {
            [path: string]: unknown[];
        };
        path?: string;
    }>): void;
    private static getAllFieldsAndRelations;
    private hasPagination;
    private buildPagination;
    remoteFetchData(expand: RemoteExpandProperty, keyField: string, ids?: (unknown | unknown[])[], relationship?: JoinerRelationship): Promise<{
        data: unknown[] | {
            [path: string]: unknown;
        };
        path?: string;
    }>;
    query(query: string, variables?: any): Promise<any>;
}
